package com.pbtd.tv.launcher.image;import android.app.ActivityManager;import android.content.Context;import android.graphics.Bitmap;import android.support.v4.util.LruCache;import android.util.Log;import java.io.File;public class ImageCacheManager {		private static ImageCacheManager imageManager;	private static final int DISK_CACHE_SIZE = 1024 * 1024 * 10; // 10MB	private static final String DISK_CACHE_SUBDIR = "disk_cache";	private LruCache<String, Bitmap> memoryCaches;//	private DiskLruCache diskCaches;		private ImageCacheManager() {}		private ImageCacheManager(Context context) {				if(memoryCaches == null){						int memClass = ((ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE)).getMemoryClass();			memClass = memClass > 32 ? 32 : memClass;			final int cacheSize = 1024 * 1024 * memClass / 4;						memoryCaches = new LruCache<String, Bitmap>(cacheSize){				@Override				protected int sizeOf(String key, Bitmap bitmap) {										return bitmap.getRowBytes() * bitmap.getHeight();				}			};						File cacheDir = DiskLruCache.getDiskCacheDir(context, DISK_CACHE_SUBDIR);			Log.i("hive", cacheDir.getAbsolutePath());//			diskCaches = DiskLruCache.openCache(context, cacheDir, DISK_CACHE_SIZE);					}	}	public static synchronized ImageCacheManager getInstance(Context context) {				if (imageManager == null) {			imageManager = new ImageCacheManager(context);		}				return imageManager;			}		public void put(final String imageUrl,final Bitmap bitmap){				memoryCaches.put(imageUrl, bitmap);//		diskCaches.put(imageUrl, bitmap);			}		public void putListImage(final String imageUrl,final Bitmap bitmap){				HttpTaskManager.getInstance().submit(new Runnable() {						@Override			public void run() {				memoryCaches.put(imageUrl, bitmap);//			diskCaches.put(imageUrl, bitmap);							}		});			}		public Bitmap get(String imageUrl){				Bitmap memoryBitmap = memoryCaches.get(imageUrl);		if(memoryBitmap!=null) return memoryBitmap;		//		Bitmap diskBitmap = diskCaches.get(imageUrl);//		if(diskBitmap!=null) return diskBitmap;				return null;	}		public void remove(String imageUrl){				memoryCaches.remove(imageUrl);			}		public void clear(){				memoryCaches.evictAll();			}		public void clearDiskCache(){		//		diskCaches.clearCache();			}	}